
%% Plotting model parameters against each other (Supplementary Figure 3b):
load('C:\Users\sajada\Box\NComms_2021_ExecutiveControl\Nature Communications R2 Submission\SourceData_Code\DATA\trialInfo.mat')
clearvars -except trialInfo
meanParamVals_perSSDbin = [];
for session = 1:29
    meanParamVales_sessionIDs = table;
    trialInfo_input = trialInfo.(['session_' int2str(session)]);
    [trls_params_output, mean_trls_params_output, paramVals_output] = getModelParams_UPDATE_v28( trialInfo_input );
    trls_params.(['session_' int2str(session)]) = trls_params_output;
    paramVals.(['session_' int2str(session)]) = paramVals_output;
    % Now that we have the parameter values for the 3 SSDs for every 
    % session, we can take the mean of each parameter value at each SSD bin.
    meanParamVales_sessionIDs.session = session * ones(3,1);
    meanParamVals_perSSDbin = [meanParamVals_perSSDbin; meanParamVales_sessionIDs  mean_trls_params_output];  
end
clearvars -except meanParamVals_perSSDbin  trls_params   paramVals

%% Once data is loaded, run the following code:
modelNames = fields(paramVals.session_1); % for all sessions it's the same.
scatterComparisonPair.set_1 = { ...
                          'pNC', 'pError';...   % 1st element is on x-axis, 2nd on y-axis
                          'pNC', 'SSD';...   
                          'pNC', 'ToneTime';...
                          'pNC', 'logSSD';...
                          'pNC', 'logToneTime';...
                          'pNC', 'surprise_stopSignal_subjective_C';...
                          'pNC', 'surprise_stopSignal_absolute_C';...
                          'pNC', 'surprise_stopSignal_subjective_SSseen';...
                          'pNC', 'surprise_stopSignal_absolute_SSseen';...
                          };
scatterComparisonPair.set_2 = { ...
                          'surprise_stopSignal_subjective_SSseen', 'pNC';...
                          'surprise_stopSignal_subjective_SSseen', 'pError';...
                          'surprise_stopSignal_subjective_SSseen', 'SSD';...
                          'surprise_stopSignal_subjective_SSseen', 'ToneTime';...
                          'surprise_stopSignal_subjective_SSseen', 'surprise_stopSignal_subjective_C';...
                          'surprise_stopSignal_subjective_SSseen', 'surprise_stopSignal_absolute_SSseen';...
                          'surprise_stopSignal_subjective_SSseen', 'surprise_stopSignal_dynamic_SSseen';...
                          };            
scatterComparisonPair.set_3 = { ...
                          'logSSD', 'SSD';...   % 1st element is on x-axis, 2nd on y-axis
                          'logSSD', 'hazardRate_stopSignal_absolute_C';...
                          'logSSD', 'hazardRate_stopSignal_subjective_C';...
                          'logSSD', 'hazardRate_stopSignal_absolute_SSseen';...
                          'logSSD', 'hazardRate_stopSignal_subjective_SSseen';...
                          };
scatterComparisonPair.set_4 = { ...
                          'logToneTime', 'ToneTime';...   % 1st element is on x-axis, 2nd on y-axis
                          'logToneTime', 'hazardRate_stopSignal_subjective_C';...
                          'logToneTime', 'hazardRate_stopSignal_absolute_C';...
                          };
% scatterComparisonPair.set_3 = { ...
%                           'hazardRate_stopSignal_subjective_SSseen', 'pError';...   % 1st element is on x-axis, 2nd on y-axis
%                           'hazardRate_stopSignal_subjective_SSseen', 'SSD';...   
%                           'hazardRate_stopSignal_subjective_SSseen', 'ToneTime';...
%                           'hazardRate_stopSignal_subjective_SSseen', 'logSSD';...
%                           'hazardRate_stopSignal_subjective_SSseen', 'logToneTime';...
%                           'hazardRate_stopSignal_subjective_SSseen', 'hazardRate_stopSignal_subjective_C';...
%                           'hazardRate_stopSignal_subjective_SSseen', 'hazardRate_stopSignal_dynamic_SSseen';...
%                           'hazardRate_stopSignal_subjective_SSseen', 'hazardRate_stopSignal_absolute_SSseen';...
%                           };
         
                      
figure;
setList = {'set_1', 'set_2', 'set_3', 'set_4'};
for panelSet = 1:numel(setList)
    for panelIdx = 1:size(scatterComparisonPair.(setList{panelSet}),1) % for each comparison pair:
        subplot( numel(setList),  size(scatterComparisonPair.(setList{panelSet}),1) , panelIdx + (panelSet-1)*size(scatterComparisonPair.(setList{panelSet}),1) ) % panels arranged in a row
        scatter( meanParamVals_perSSDbin.(scatterComparisonPair.(setList{panelSet}){panelIdx,1}), meanParamVals_perSSDbin.(scatterComparisonPair.(setList{panelSet}){panelIdx,2}), '.k' );
        [Rho, pv] = corrcoef( meanParamVals_perSSDbin.(scatterComparisonPair.(setList{panelSet}){panelIdx,1}), meanParamVals_perSSDbin.(scatterComparisonPair.(setList{panelSet}){panelIdx,2}) );
        R = Rho(1,2
        lsline
        xlabel( scatterComparisonPair.(setList{panelSet}){panelIdx,1}, 'interpreter','none' )
        ylabel( scatterComparisonPair.(setList{panelSet}){panelIdx,2}, 'interpreter','none' )
        title( 'parameter comparison' )
    end
end